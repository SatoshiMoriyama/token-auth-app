AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  token-auth-app

  AWS Lambda オーソライザを使用したトークン認証システム

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 10
    MemorySize: 128

Resources:
  # Lambda オーソライザ関数
  TokenAuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: authorizer/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Description: "Lambda オーソライザ関数（常に許可）"

  # メイン API 関数
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Description: "メイン API 関数"

  # API Gateway の定義
  TokenAuthApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Description: "オーソライザ付きAPI（常に許可）"
      Auth:
        Authorizers:
          RequestAuthorizer:
            FunctionArn: !GetAtt TokenAuthorizerFunction.Arn
            FunctionPayloadType: REQUEST
            Identity:
              Headers:
                - Host
              Context:
                - requestId
            AuthorizerResultTtlInSeconds: 0
        DefaultAuthorizer: RequestAuthorizer
      DefinitionBody:
        swagger: "2.0"
        info:
          title: "Token Auth API"
          version: "1.0.0"
        securityDefinitions:
          RequestAuthorizer:
            type: apiKey
            name: Unused
            in: header
            x-amazon-apigateway-authtype: custom
            x-amazon-apigateway-authorizer:
              type: request
              authorizerUri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TokenAuthorizerFunction.Arn}/invocations"
              authorizerResultTtlInSeconds: 0
              identitySource: "method.request.header.Host,context.requestId"
        paths:
          /hello:
            get:
              security:
                - RequestAuthorizer: []
              responses:
                "200":
                  description: "成功レスポンス"
                  headers:
                    X-Access-Token:
                      type: string
                      description: "アクセストークン"
                    Access-Control-Allow-Origin:
                      type: string
                    Access-Control-Expose-Headers:
                      type: string
              x-amazon-apigateway-integration:
                type: aws
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HelloWorldFunction.Arn}/invocations"
                httpMethod: POST
                responses:
                  default:
                    statusCode: 200
                    responseParameters:
                      method.response.header.X-Access-Token: "context.authorizer.accessToken"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                      method.response.header.Access-Control-Expose-Headers: "'X-Access-Token'"
                    responseTemplates:
                      application/json: |
                        #set($accessToken = $context.authorizer.accessToken)
                        #set($userId = $context.authorizer.userId)
                        #set($authTimestamp = $context.authorizer.timestamp)
                        {
                          "message": "$input.json('$.message')",
                          "timestamp": "$input.json('$.timestamp')",
                          "status": "$input.json('$.status')",
                          "accessToken": "$accessToken",
                          "userId": "$userId",
                          "hasAccessToken": true,
                          "note": "トークンはオーソライザで生成されました",
                          "authTimestamp": "$authTimestamp"
                        }

  # Lambda 関数の実行権限
  HelloWorldFunctionInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref HelloWorldFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${TokenAuthApi}/*/*"

  TokenAuthorizerFunctionInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref TokenAuthorizerFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${TokenAuthApi}/authorizers/*"

Outputs:
  TokenAuthApiEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${TokenAuthApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"

  HelloWorldApiEndpoint:
    Description: "API Gateway endpoint URL for Hello World function"
    Value: !Sub "https://${TokenAuthApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"

  TokenAuthorizerFunction:
    Description: "Lambda オーソライザ関数 ARN"
    Value: !GetAtt TokenAuthorizerFunction.Arn

  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
